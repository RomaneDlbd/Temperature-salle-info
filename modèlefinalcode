import numpy as np
import matplotlib.pyplot as plt
import math

# "a", alimentation
# "c", carte graphique
# "p", processeur
# "d", disque dur
# "r", RAM
# "cm", carte mère

Vu = 0.024276 # volume de l'unité centrale en m^3

Tamb = 291.15 # température ambiante en Kelvin

T = {"d":296.15,
     "r":291.65,
     "cm":307.15} # températures des composants en K

S = {"d":0.0356,
     "r":0.01115,
     "cm":0.0576} # surfaces de contactes composants/air en m^2

M = {"a":3.62,
     "c":0.591,
     "p":0.023,
     "d":0.73,
     "r":0.12,
     "cm":0.56} # masses composants en Kg

C = {"a":435*M["a"],
     "c":435*M["c"],
     "p":435*M["p"],
     "d":435*M["d"],
     "r":435*M["r"],
     "cm":435*M["cm"]} # capacités calorifiques composants = masse*chaleur massique acier à pression constante en J/K

E = {"d":T["d"]*C["d"],
     "r":T["r"]*C["r"],
     "cm":T["cm"]*C["cm"]} # énergie des composants = température*capacité calorifiques en J

Mair = 1.225*(Vu-0.002412) # ro*Vair = ro*(V(unité centrale) - V(composants)) en kg

Cpair = 1005 # chaleur massique de l'air à pression constante en J/(kg*K)

Tf = (T["d"]+T["r"]+T["cm"])/len(T) # température finale de l'air dans l'unité centrale en K

tmax = 30


def temp_air(T, S, Tamb, Mair, Cpair, t):
    """
    dict[str:Number]^2*Number^4*int -> Number
    rend la température de l'air de l'unité centrale à un instant t
    """
    T0 = Tamb
    h = {"d":(math.fabs(Tf-Tamb)*Cpair*Mair)/(S["d"]*math.fabs(T0-T["d"])*2),
         "r":(math.fabs(Tf-Tamb)*Cpair*Mair)/(S["r"]*math.fabs(T0-T["r"])*2),
         "cm":(math.fabs(Tf-Tamb)*Cpair*Mair)/(S["cm"]*math.fabs(T0-T["cm"])*2)}
    s = 0
    if t == 0 :
        return T0
    else :
        for i in range(2,t+1,2) :
            for j in S :
                s += math.exp((-h[j]*S[j]*i)/(Mair*Cpair))*(Tamb-T[j])+T[j]
                h[j] = (math.fabs(Tf-Tamb)*Cpair*Mair)/(S[j]*math.fabs(T0-T[j])*2)
            T0 = s/len(S)
            s = 0
    return T0

def temp_air_tout_instant(T, S, Tamb, Mair, Cpair, tmax) :
    """
    dict[str:Number]^2*Number^5 -> Number
    rend la température de l'air de l'unité centrale pour tout instant t
    """
    TT = []
    for i in range(0,tmax+1,2) :
        TT.append((i,temp_air(T, S, Tamb, Mair, Cpair, i)))
    return TT


def list_temps(T, S, Tamb, Mair, Cpair, tmax):
    """
    """
    L = []
    for i in temp_air_tout_instant(T, S, Tamb, Mair, Cpair, tmax) :
        a,b = i
        L.append(a)
    return L

def list_T(T, S, Tamb, Mair, Cpair, tmax):
    """
    """
    L = []
    for i in temp_air_tout_instant(T, S, Tamb, Mair, Cpair, tmax) :
        a,b = i
        L.append(b)
    return L
L1 = list_temps(T, S, Tamb, Mair, Cpair, tmax)
L2 = list_T(T, S, Tamb, Mair, Cpair, tmax)

# "a", alimentation
# "c", carte graphique
# "p", processeur
# "d", disque dur
# "r", RAM
# "cm", carte mère
 
Vu = 0.024 # volume de l'unité centrale en m^3

Vair = Vu - 0.002412 # volume air = volume unité centrale - volume composants

Tamb = 291.15 # température ambiante en Kelvin

Ralu = 0.35 # résistence thermique de l'aluminium en K/W

Rair = 0.11 # résistence thermique de l'air en K/W

Cpalu = 897 # chaleur massique de l'aluminium à pression constante en J/(kg*K)

M = {"a":3.62,
     "c":0.023,
     "p":0.023,
     "d":0.73,
     "r":0.12,
     "cm":0.56} # masses composants en Kg

C = {"a":435*M["a"],
     "c":435*M["c"],
     "p":435*M["p"],
     "d":435*M["d"],
     "r":435*M["r"],
     "cm":435*M["cm"]} # capacités calorifiques composants = masse*chaleur massique acier à pression constante en J/K

Malu = {"p":0.15,
        "a":0.13,
        "c":0.084} # masse des dissipateur en kg

Calu = {"p":897*Malu["p"],
        "a":897*Malu["a"],
        "c":897*Malu["c"]} # capacité calorifique des dissipateur

Mvent = {"p":1.225*7.41*10**(-3)*2,
        "a":1.225*9.91*10**(-3)*2,
        "c":1.225*8.64*10**(-3)*2} # masse de l'air brassé par les ventilateurs en kg

Scomp_air = {"d":0.0356,
     "r":0.01115,
     "cm":0.0576} # surfaces de contactes composants/air en m^2

Scomp_dis = {"p":0.0025,
            "a":0.00345,
            "c":0.0048} # surfaces de contactes composants/dissipateurs en m^2

Sdis_vent = {"p":0.04005,
            "a":0.2763,
            "c":0.03936} # surfaces de contactes dissipateurs/air en m^2



Mair = 1.225*(Vu-0.002412) # ro*Vair = ro*(V(unité centrale) - V(composants)) en kg

Cpair = 1005 # chaleur massique de l'air à pression constante en J/(kg*K)

tmax = 12 # temps en s


def temp_comp_dis(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, t) :
    """
    dict[str:Number]^6*Number^6 -> tuple[dict[str:Number],dict[str:number]]
    rend la température des composants ainsi que celle des dissipateurs à un instant t
    """
    
    P = {"a":np.random.randint(80, 100 + 1),
     "c":np.random.randint(75, 95 + 1),
     "p":np.random.randint(45, 60 + 1),
     "d":np.random.randint(8, 15 + 1),
     "r":1,
     "cm":np.random.randint(20, 35 + 1)} # puissance apportés aux composants en W
    
    if t == 0 :
        return ({"a":Tamb,
     "c":Tamb,
     "p":Tamb,
     "d":Tamb,
     "r":Tamb,
     "cm":Tamb}, {"p":Tamb,
            "a":Tamb,
            "c":Tamb})
    else :
        Keys = ["d", "r", "cm"]
        
        Tair = Tamb
        
        T0 = Tamb
        
        s = 0
        
        hcomp_air = {"d":0,
            "r":0,
            "cm":0}
        
        hcomp_dis = {"p":0,
            "a":0,
            "c":0}
        
        Tdis = {"p":Tamb,
            "a":Tamb,
            "c":Tamb}
        
        Tcomp = {"a":Tamb,
     "c":Tamb,
     "p":Tamb,
     "d":Tamb,
     "r":Tamb,
     "cm":Tamb}
        
        Tvent = {"p":Tair,
            "a":Tair,
            "c":Tair}
        
        chaleur = {"p":0,
            "a":0,
            "c":0}
        
        Tfalu = {"p":math.exp(-((60/C["p"])+(Tvent["p"]/(Ralu*C["p"])))*90)*(-60*Ralu-Tvent["p"])+60*Ralu+Tvent["p"],
        "a":math.exp(-((100/C["a"])+(Tvent["a"]/(Ralu*C["a"])))*90)*(-100*Ralu-Tvent["a"])+100*Ralu+Tvent["a"],
        "c":math.exp(-((90/C["c"])+(Tvent["c"]/(Ralu*C["c"])))*90)*(-95*Ralu-Tvent["c"])+95*Ralu+Tvent["c"]}
        
        hdis_vent = {"p":0,
            "a":0,
            "c":0}
        
        hvent_dis = {"p":0,
            "a":0,
            "c":0}
        
        Pdis = {"p":0,
            "a":0,
            "c":0}
        
        for i in range(1,t+1,2) :
            for j in Keys :
                Tcomp[j] = math.exp(-((P[j]/C[j])+(Tair/(Rair*C[j])))*i)*(-P[j]*Rair)+P[j]*Rair+Tair
            hcomp_air[j] = (math.fabs(Tf-Tamb)*Cpair*Mair)/(S[j]*math.fabs(T0-T[j])*2)
            s = math.exp((-hcomp_air["d"]*Scomp_air["d"]*t)/(Mair*Cpair))*(Tamb-Tcomp["d"])+Tcomp["d"] + math.exp((-hcomp_air["r"]*Scomp_air["r"]*t)/(Mair*Cpair))*(Tamb-Tcomp["r"])+Tcomp["r"] + math.exp((-hcomp_air["cm"]*Scomp_air["cm"]*t)/(Mair*Cpair))*(Tamb-Tcomp["cm"])+Tcomp["cm"]
            T0 = s/len(Scomp_air)
            for k in Scomp_dis :
                if (Tcomp[k] <= Tfalu[k]) or (Tcomp[k] == Tdis[k] == Tamb) :
                    Tcomp[k] = math.exp(-((P[k]/C[k])+(Tair/(Ralu*C[k])))*i)*(-P[k]*Ralu)+P[k]*Ralu+Tair
                    
                    hcomp_dis[k] = (math.fabs(Tfalu[k]-Tamb)*Cpalu*Malu[k])/(Scomp_dis[k]*math.fabs(Tdis[k]-Tcomp[k])*2)
                    
                    Tdis[k] = math.exp((-hcomp_dis[k]*Scomp_dis[k]*i)/(Malu[k]*Cpalu))*(Tamb-Tcomp[k])+Tcomp[k]
                    
                    hdis_vent[k] = (math.fabs(Tfalu[k]-Tamb)*Cpair*Mvent[k])/(Sdis_vent[k]*math.fabs(Tair-Tdis[k])*2)
                    
                    Tvent[k] = math.exp((-hdis_vent[k]*Sdis_vent[k]*i)/(Mvent[k]*Cpair))*(Tamb-Tdis[k])+Tdis[k]
                    
                    chaleur[k] = Mvent[k]*Cpair*math.fabs(Tair-Tvent[k])
                    
                    Tdis[k] = Tdis[k] - chaleur[k]/(Malu[k]*Cpalu)
                else :
                    Tcomp[k] = (P[k]/C[k])*i+Tfalu[k]
                        
                    Tdis[k] = Tcomp[k]
                        
                    Tvent[k] = Tdis[k]
                    
            Tfalu = {"p":math.exp(-((60/C["p"])+(Tair/(Ralu*C["p"])))*90)*(-60*Ralu-Tair)+60*Ralu+Tair,
        "a":math.exp(-((100/C["a"])+(Tair/(Ralu*C["a"])))*90)*(-100*Ralu-Tair)+100*Ralu+Tair,
        "c":math.exp(-((95/C["c"])+(Tair/(Ralu*C["c"])))*90)*(-95*Ralu-Tair)+95*Ralu+Tair}

            Tair = ((Vair-7.41*10**(-3)*2-9.91*10**(-3)*2-8.64*10**(-3)*2)*T0+7.41*10**(-3)*2*Tvent["p"]+9.91*10**(-3)*2*Tvent["a"]+8.64*10**(-3)*2*Tvent["c"])/Vair
            
    return (Tcomp, Tdis)


def temp_comp_dis_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, tmax) :
    """
    dict[str:Number]^6*Number^5 -> tuple[dict[str:Number],dict[str:number]]
    rend la température des composants ainsi que celle des dissipateurs à un instant t
    """
        
    TT = []
    for i in range(0,tmax+1,2) :
        a,b = temp_comp_dis(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, i)
        TT.append((i,a))
    return TT

def list_temps2(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, tmax):
    """
    """
    L = []
    for i in temp_comp_dis_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, tmax) :
        a,b = i
        L.append(a)
    return L

def list_T2(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, tmax):
    """
    """
    L = []
    for i in temp_comp_dis_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, tmax) :
        a,b = i
        L0 = []
        for j in b :
            L0.append(b[j])
        L.append(L0)
    return L
L1 = list_temps2(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, tmax)
L2 = list_T2(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, tmax)


Dvent = 0.01747 # débit d'air explusé de lordinateur en m^3/s

tmax = 50

def temp_ordi(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, t) :
    """
    dict[str:Number]^6*Number^6 -> tuple[tuple[dict[str:Number],dict[str:Number]],tuple[dict[str:number],Number]]
    rend la température des composants, des dissipateurs, de l'air expulsé et de l'air des ventilateur à un instant t
    """
    
    P = {"a":np.random.randint(80, 100 + 1),
     "c":np.random.randint(75, 95 + 1),
     "p":np.random.randint(45, 60 + 1),
     "d":np.random.randint(8, 15 + 1),
     "r":1,
     "cm":np.random.randint(20, 35 + 1)} # puissance apportés aux composants en W
    
    if t == 0 :
        return (({"a":Tamb,
     "c":Tamb,
     "p":Tamb,
     "d":Tamb,
     "r":Tamb,
     "cm":Tamb}, {"p":Tamb,
            "a":Tamb,
            "c":Tamb}),({"p":Tamb,
            "a":Tamb,
            "c":Tamb},Tamb))
    else :
        Keys = ["d", "r", "cm"]
        
        Tair = Tamb
        
        Texp = Tamb
        
        T0 = Tamb
        
        s = 0
        
        hcomp_air = {"d":0,
            "r":0,
            "cm":0}
        
        hcomp_dis = {"p":0,
            "a":0,
            "c":0}
        
        Tdis = {"p":Tamb,
            "a":Tamb,
            "c":Tamb}
        
        Tcomp = {"a":Tamb,
     "c":Tamb,
     "p":Tamb,
     "d":Tamb,
     "r":Tamb,
     "cm":Tamb}
        
        Tvent = {"p":Tamb,
            "a":Tamb,
            "c":Tamb}
        
        chaleur = {"p":0,
            "a":0,
            "c":0}
        
        Tfalu = {"p":math.exp(-((60/C["p"])+(Tvent["p"]/(Ralu*C["p"])))*90)*(-60*Ralu-Tvent["p"])+60*Ralu+Tvent["p"],
        "a":math.exp(-((100/C["a"])+(Tvent["a"]/(Ralu*C["a"])))*90)*(-100*Ralu-Tvent["a"])+100*Ralu+Tvent["a"],
        "c":math.exp(-((90/C["c"])+(Tvent["c"]/(Ralu*C["c"])))*90)*(-95*Ralu-Tvent["c"])+95*Ralu+Tvent["c"]}
        
        hdis_vent = {"p":0,
            "a":0,
            "c":0}
        
        hvent_dis = {"p":0,
            "a":0,
            "c":0}
        
        Pdis = {"p":0,
            "a":0,
            "c":0}
        
        for i in range(1,t+1,2) :
            for j in Keys :
                Tcomp[j] = math.exp(-((P[j]/C[j])+(Tair/(Rair*C[j])))*i)*(-P[j]*Rair)+P[j]*Rair+Tair
            for k in Scomp_dis :
                if (Tcomp[k] <= Tfalu[k]) and (Tdis[k] != Tcomp[k]) or (Tcomp[k] == Tdis[k] == Tamb) :
                    Tcomp[k] = math.exp(-((P[k]/C[k])+(Tair/(Ralu*C[k])))*i)*(-P[k]*Ralu)+P[k]*Ralu+Tair
                    
                    hcomp_dis[k] = (math.fabs(Tfalu[k]-Tamb)*Cpalu*Malu[k])/(Scomp_dis[k]*math.fabs(Tdis[k]-Tcomp[k])*2)
                    
                    Tdis[k] = math.exp((-hcomp_dis[k]*Scomp_dis[k]*i)/(Malu[k]*Cpalu))*(Tamb-Tcomp[k])+Tcomp[k]
                    
                    hdis_vent[k] = (math.fabs(Tfalu[k]-Tamb)*Cpair*Mvent[k])/(Sdis_vent[k]*math.fabs(Tair-Tdis[k])*2)
                    
                    Tvent[k] = math.exp((-hdis_vent[k]*Sdis_vent[k]*i)/(Mvent[k]*Cpair))*(Tamb-Tdis[k])+Tdis[k]
                    
                    chaleur[k] = Mvent[k]*Cpair*math.fabs(Tair-Tvent[k])
                    
                    Tdis[k] = Tdis[k] - chaleur[k]/(Malu[k]*Cpalu)
                                        
                else :
                    Tcomp[k] = Tfalu[k]
                        
                    Tdis[k] = Tcomp[k]
                        
                    Tvent[k] = Tdis[k]
                    
                    
            Tfalu = {"p":math.exp(-((60/C["p"])+(Tair/(Ralu*C["p"])))*90)*(-60*Ralu-Tair)+60*Ralu+Tair,
                    "a":math.exp(-((100/C["a"])+(Tair/(Ralu*C["a"])))*90)*(-100*Ralu-Tair)+100*Ralu+Tair,
                    "c":math.exp(-((90/C["c"])+(Tair/(Ralu*C["c"])))*90)*(-95*Ralu-Tair)+95*Ralu+Tair}
            
        hcomp_air[j] = (math.fabs(Tf-Tamb)*Cpair*Mair)/(S[j]*math.fabs(T0-T[j])*2)
        s = math.exp((-hcomp_air["d"]*Scomp_air["d"]*t)/(Mair*Cpair))*(Tamb-Tcomp["d"])+Tcomp["d"] + math.exp((-hcomp_air["r"]*Scomp_air["r"]*t)/(Mair*Cpair))*(Tamb-Tcomp["r"])+Tcomp["r"] + math.exp((-hcomp_air["cm"]*Scomp_air["cm"]*t)/(Mair*Cpair))*(Tamb-Tcomp["cm"])+Tcomp["cm"]
        T0 = s/len(Scomp_air)
        Tair = Tamb
        Texp = ((((2*Vair-7.41*10**(-3)*2-9.91*10**(-3)*2-8.64*10**(-3)*2)*T0+7.41*10**(-3)*2*Tvent["p"]+9.91*10**(-3)*2*Tvent["a"]+8.64*10**(-3)*2*Tvent["c"]))+(Dvent*2-Vair*2)*Tamb)/(2*Dvent)
        
            
    return ((Tcomp, Tdis), (Tvent,Texp))

def temp_comp_final_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax) :
    """
    dict[str:Number]^6*Number^6 -> list[tuple[Number,disct[str:Number]]]
    rend la température des composants pour tout instants.
    """
    T0 = []
    for i in range(0,tmax+1,2):
        a,b = temp_ordi(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, i)
        c,d = a
        e,f = b
        T0.append((i,c))
    return T0

def list_temps3(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax):
    """
    """
    L = []
    for i in temp_comp_final_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax) :
        a,b = i
        L.append(a)
    return L

def list_T3(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax):
    """
    """
    L = []
    for i in temp_comp_final_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax) :
        a,b = i
        L0 = []
        for j in b :
            L0.append(b[j])
        L.append(L0)
    return L
L1 = list_temps3(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax)
L2 = list_T3(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax)

def temp_exp_final_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax) :
    """
    dict[str:Number]^6*Number^6 -> list[tuple[Number,Number]]
    rend la température expulsé du pc pour tout instants.
    """
    T0 = []
    for i in range(0,tmax+1,2):
        a,b = temp_ordi(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, i)
        c,d = a
        e,f = b
        T0.append((i,f))
    return T0

def list_temps4(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax):
    """
    """
    L = []
    for i in temp_exp_final_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax) :
        a,b = i
        L.append(a)
    return L

def list_T4(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax):
    """
    """
    L = []
    for i in temp_exp_final_tout_instant(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax) :
        a,b = i
        L.append(b)
    return L
L1 = list_temps4(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax)
L2 = list_T4(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, tmax)

Vu = 0.024 # volume de l'unité centrale en m^3

Dvent = 0.01747 # débit d'air explusé de lordinateur en m^3/s

Vcase = 1*1*3 # volume d'une case en m^3

Vsalle = 10*5*3 #volume de la salle en m^3

Vi = Vcase-Vu # volume dans une case, moins celui de l'unité centrale

Maco = 1.225*Vi # ro*Vair = ro*Vi en kg

Mac = 1.225*Vcase # ro*Vair = ro*Vcase en kg

Cpair = 1005 # chaleur massique de l'air à pression constante en J/(kg*K)

dt = 10 # temps entre 2 homogénéisation en s

MS = { 10:Tamb, 11:Tamb, 12:Tamb, 13:Tamb, 14:Tamb, 15:Tamb, 16:Tamb, 17:Tamb, 18:Tamb, 19:Tamb,
           20:Tamb, 21:Tamb, 22:Tamb, 23:Tamb, 24:Tamb, 25:Tamb, 26:Tamb, 27:Tamb, 28:Tamb, 29:Tamb,
           30:Tamb, 31:Tamb, 32:Tamb, 33:Tamb, 34:Tamb, 35:Tamb, 36:Tamb, 37:Tamb, 38:Tamb, 39:Tamb,
           40:Tamb, 41:Tamb, 42:Tamb, 43:Tamb, 44:Tamb, 45:Tamb, 46:Tamb, 47:Tamb, 48:Tamb, 49:Tamb,
           50:Tamb, 51:Tamb, 52:Tamb, 53:Tamb, 54:Tamb, 55:Tamb, 56:Tamb, 57:Tamb, 58:Tamb, 59:Tamb}

ordi = [12,16,54]

tmax = 50 # temps maximum en s

def temp_case_ordi(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, Vu, Vi, Vcase, dt, t) :
    """
    """
    TF = Tamb
    for i in range(1,t+1,dt) :
        a,b = temp_ordi(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, TF, Cpalu, Dvent, i)
        c,d = b
        TF = (Dvent*10*d+(Vi-Dvent)*10*TF)/(Vi*10)
    return TF

def temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, Pcase1, Pcase2, Tcase1, Tcase2, ordi, dt) :
    """ 
    Number^9*list[Number] -> Number
    rend la température air d'une case après tranfert de température
    """
    
    if Pcase1 in ordi and Pcase2 in ordi :
        
        Tf = (math.exp((-dt)/(Cpair*Maco))/(Cpair*Maco))+Tcase1
    
        TF = (Maco*Tcase2+Maco*Tf)/(2*Maco)
    
    elif Pcase1 in ordi :
        
        Tf = (math.exp((-dt)/(Cpair*Maco))/(Cpair*Maco))+Tcase1
    
        TF = (Mac*Tcase2+Maco*Tf)/(Maco+Mac)
        
    elif Pcase2 in ordi :
        
        Tf = (math.exp((-dt)/(Cpair*Mac))/(Cpair*Mac))+Tcase1
    
        TF = (Maco*Tcase2+Mac*Tf)/(Maco+Mac)
        
    else :
        
        Tf = (math.exp((-dt)/(Cpair*Mac))/(Cpair*Mac))+Tcase1
    
        TF = (Mac*Tcase2+Mac*Tf)/(2*Mac)
        
    return TF

def matrice_salle(MS, t) :
    """
    dict[Number:Number]*Number -> list[list[Number]]
    retourne la matrice des températures de la salle à un instant t
    """
    D0 = MS
    D1 = {21:MS[21], 22:MS[22], 23:MS[23], 24:MS[24], 25:MS[25], 26:MS[26], 27:MS[27], 28:MS[28], 31:MS[31], 32:MS[32], 33:MS[33], 34:MS[34], 35:MS[35], 36:MS[36], 37:MS[37], 38:MS[38], 41:MS[41], 42:MS[42], 43:MS[43], 44:MS[44], 45:MS[45], 46:Tamb, 47:MS[47], 48:MS[48]}
    D2 = {11:MS[11], 12:MS[12], 13:MS[13], 14:MS[14], 15:MS[15], 16:MS[16], 17:MS[17], 18:MS[18]}
    D3 = {51:MS[51], 52:MS[52], 53:MS[53], 54:MS[54], 55:MS[55], 56:MS[56], 57:MS[57], 58:MS[58]}
    D4 = {20:MS[20], 30:MS[30], 40:MS[40]}
    D5 = {29:MS[29], 39:MS[39], 49:MS[49]}
    D6 = {10:MS[10]}
    D7 = {19:MS[19]}
    D8 = {50:MS[50]}
    D9 = {59:MS[59]}
    
    for i in range(0,t+1,dt) :
        for j in ordi :
            D0[j] = temp_case_ordi(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, Vu, Vi, Vcase, dt, i)
        for j in D1 :
            if D0[j]<D0[j+1] and D0[j]<D0[j+10] and D0[j]<D0[j-1] and D0[j]<D0[j-10] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/4
            elif D0[j]<D0[j+1] and D0[j]<D0[j+10] and D0[j]<D0[j-1] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt))/3
            elif D0[j]<D0[j+1] and D0[j]<D0[j-10] and D0[j]<D0[j-1] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt))/3
            elif D0[j]<D0[j+10] and D0[j]<D0[j-10] and D0[j]<MS[j+1] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt))/3
            elif D0[j]<D0[j+10] and D0[j]<D0[j-10] and D0[j]<D0[j-1] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt))/3
            elif D0[j]<D0[j+10] and D0[j]<D0[j-10] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j+1] and D0[j]<D0[j-1] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt))/2
            elif D0[j]<D0[j-1] and D0[j]<D0[j-10] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif MS[j]<MS[j+1] and D0[j]<D0[j-10] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j-1] and D0[j]<D0[j+10] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j+1] and D0[j]<D0[j+10] :
                D1[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j-10] :
                D1[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)
            elif D0[j]<D0[j-1] :
                D1[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)
            elif D0[j]<D0[j+1] :
                D1[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)
            elif D0[j]<D0[j+10] :
                D1[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)
        
        for j in D2 :
            if D0[j]<D0[j+1] and D0[j]<D0[j+10] and D0[j]<D0[j-1] :
                D2[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt))/3
            elif D0[j]<D0[j-1] and D0[j]<MS[j+10] :
                D2[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j+1] and D0[j]<D0[j+10] :
                D2[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j-1] and D0[j]<D0[j+1] :
                D2[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt))/2
            elif D0[j]<D0[j-1] :
                D2[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)
            elif D0[j]<D0[j+1] :
                D2[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)
            elif D0[j]<D0[j+10] :
                D2[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)
                         
        for j in D3 :
            if D0[j]<D0[j+1] and D0[j]<D0[j-10] and D0[j]<D0[j-1] :
                D3[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt))/3
            elif D0[j]<D0[j-1] and D0[j]<D0[j-10] :
                D3[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j+1] and D0[j]<MS[j-10] :
                D3[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j-1] and D0[j]<D0[j+1] :
                D3[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt))/2
            elif D0[j]<D0[j-1] :
                D3[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)
            elif D0[j]<D0[j+1] :
                D3[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)
            elif D0[j]<D0[j-10] :
                D3[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)
        
        for j in D4 :
            if D0[j]<D0[j+10] and D0[j]<D0[j-10] and D0[j]<D0[j+1] :
                D4[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt))/3
            elif D0[j]<D0[j+1] and D0[j]<D0[j-10] :
                D4[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j+10] and D0[j]<MS[j-10] :
                D4[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j+1] and D0[j]<D0[j+10] :
                D4[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j+1] :
                D4[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)
            elif D0[j]<D0[j+10] :
                D4[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)
            elif D0[j]<D0[j-10] :
                D4[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)
                         
        for j in D5 :
            if D0[j]<D0[j+10] and D0[j]<D0[j-10] and D0[j]<D0[j-1] :
                D5[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt))/3
            elif D0[j]<D0[j-1] and D0[j]<D0[j-10] :
                D5[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j+10] and D0[j]<MS[j-10] :
                D5[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j-1] and D0[j]<D0[j+10] :
                D5[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j-1] :
                D5[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)
            elif D0[j]<D0[j+10] :
                D5[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)
            elif D0[j]<D0[j-10] :
                D5[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)
                         
        for j in D6 :
            if D0[j]<D0[j+1] and D0[j]<D0[j+10] :
                D6[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j+10] :
                D6[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)
            elif D0[j]<D0[j+1] :
                D6[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)
                         
        for j in D7 :
            if D0[j]<D0[j-1] and D0[j]<D0[j+10] :
                D7[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt))/2
            elif D0[j]<D0[j+10] :
                D7[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+10, D0[j], D0[j+10], ordi, dt)
            elif D0[j]<D0[j-1] :
                D7[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)
                         
        for j in D8 :
            if D0[j]<D0[j+1] and D0[j]<D0[j-10] :
                D8[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j-10] :
                D8[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)
            elif D0[j]<D0[j+1] :
                D8[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j+1, D0[j], D0[j+1], ordi, dt)
                         
        for j in D9 :
            if D0[j]<D0[j-1] and D0[j]<D0[j-10] :
                D9[j] = (temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)+temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt))/2
            elif D0[j]<D0[j-10] :
                D9[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-10, D0[j], D0[j-10], ordi, dt)
            elif D0[j]<D0[j-1] :
                D9[j] = temp_new_1case(Vcase, Vi, Maco, Mac, Cpair, j, j-1, D0[j], D0[j-1], ordi, dt)
                
        D0 = {10:D6[10], 11:D2[11], 12:D2[12], 13:D2[13], 14:D2[14], 15:D2[15], 16:D2[16], 17:D2[17], 18:D2[18], 19:D7[19],
            20:D4[20], 21:D1[21], 22:D1[22], 23:D1[23], 24:D1[24], 25:D1[25], 26:D1[26], 27:D1[27], 28:D1[28], 29:D5[29],
            30:D4[30], 31:D1[31], 32:D1[32], 33:D1[33], 34:D1[34], 35:D1[35], 36:D1[36], 37:D1[37], 38:D1[38], 39:D5[39],
            40:D4[40], 41:D1[41], 42:D1[42], 43:D1[43], 44:D1[44], 45:D1[45], 46:D1[46], 47:D1[47], 48:D1[48], 49:D5[49],
            50:D8[50], 51:D3[51], 52:D3[52], 53:D3[53], 54:D3[54], 55:D3[55], 56:D3[56], 57:D3[57], 58:D3[58], 59:D9[59]}
        
        for j in ordi :
            D0[j] = temp_case_ordi(Scomp_dis, Scomp_air, Sdis_vent, Mvent, Malu, C, Ralu, Rair, Vair, Tamb, Cpalu, Dvent, Vu, Vi, Vcase, dt, i)
                         
    return np.matrix([[D0[10], D0[11], D0[12], D0[13], D0[14], D0[15], D0[16], D0[17], D0[18], D0[19]],
            [D0[20], D0[21], D0[22], D0[23], D0[24], D0[25], D0[26], D0[27], D0[28], D0[29]],
            [D0[30], D0[31], D0[32], D0[33], D0[34], D0[35], D0[36], D0[37], D0[38], D0[39]],
            [D0[40], D0[41], D0[42], D0[43], D0[44], D0[45], D0[46], D0[47], D0[48], D0[49]],
            [D0[50], D0[51], D0[52], D0[53], D0[54], D0[55], D0[56], D0[57], D0[58], D0[59]]])
            


import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np


methods = [None, 'sinc']
matrices=[]
j=0
for i in range(0,210,10):
    
    a=matrice_salle(MS, i)
    matrices.append(a)
    
    grid = matrices[j]

    fig, axs = plt.subplots(nrows=2, ncols=1, figsize=(80, 40),
                        subplot_kw={'xticks': [], 'yticks': []})

    fig.subplots_adjust(left=0.03, right=0.97, hspace=0.3, wspace=0.05)

    for ax, interp_method in zip(axs.flat, methods):
    
        ax.imshow(grid, interpolation=interp_method, cmap="plasma", norm = mpl.colors.Normalize(vmin=291.15,vmax=296))
        ax.set_title(str(interp_method))
        
    plt.savefig(str('/users/Etu3/3803703/Documents/ARE/gif1/matricetests'+str(i)+'.png'))
    
    j+=1
    
    
from PIL import Image
images=[]

for i in range(0,210,10):
    
    im = Image.open('/users/Etu3/3803703/Documents/ARE/gif1/matricetests'+str(i)+'.png')
    images.append(im)


images[0].save('/users/Etu3/3803703/Documents/ARE/gif1/anitest.gif',
               save_all=True,
               append_images=images[1:],
               duration=500,
               loop=0)



